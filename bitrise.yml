format_version: '11'
default_step_lib_source:
project_type: ios
pipelines:
  pipeline_multiple_shards:
    stages:
    - stage_1: {}
    - stage_2: {}
    - stage_3: {}
stages:
  stage_1:
    workflows:
    - pipeline_test_shards: {}
  stage_2:
    workflows:
    - tests_1: {}
    - tests_2: {}
  stage_3:
    workflows:
    - deploy: {}
workflows:
  pipeline_test_shards:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - cocoapods-install@2: {}
    - git::https://github.com/DamienBitrise/bitrise-test-plan-sharder.git@master:
          title: Bitrise Test Plan Sharder
          inputs:
            - xcode_project: Client.xcodeproj
            - target: Fennec_Enterprise_XCUITests
            - shards: '2'
            - scheme: Smoketest2
            - test_plan: Smoketest2.xctestplan
            - debug_mode: 'true'
            - test_path: ''
            - file_type: ".swift"
    - git-clone@4: {}
    - script@1.1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            set -x
            BRANCH=$BITRISE_GIT_BRANCH

            if [[ $BRANCH == update-spm-new-rust-component-tag-* ]]
            then
                echo "Building with new Rust-Component version"
                envman add --key NEW_RC_VERSION --value New_RC_Version
            fi
        title: Save Branch Name
    - script@1:
        title: Add default web browser entitlement for Fennec
        inputs:
        - content: |-
            #/usr/bin/env bash
            set -x

            echo "Adding com.apple.developer.web-browser to entitlements"

            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Client/Entitlements/FennecApplication.entitlements
    - cache-pull@2.1: {}
    - certificate-and-profile-installer@1.10: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            echo 'EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x86_64=arm64 arm64e armv7 armv7s armv6 armv8' > /tmp/tmp.xcconfig
            echo 'EXCLUDED_ARCHS=$(inherited) $(EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_$(EFFECTIVE_PLATFORM_SUFFIX)__NATIVE_ARCH_64_BIT_$(NATIVE_ARCH_64_BIT))' >> /tmp/tmp.xcconfig
            echo 'IPHONEOS_DEPLOYMENT_TARGET=11.4' >> /tmp/tmp.xcconfig
            echo 'SWIFT_TREAT_WARNINGS_AS_ERRORS=NO' >> /tmp/tmp.xcconfig
            echo 'GCC_TREAT_WARNINGS_AS_ERRORS=NO' >> /tmp/tmp.xcconfig
            export XCODE_XCCONFIG_FILE=/tmp/tmp.xcconfig
            envman add --key XCODE_XCCONFIG_FILE --value /tmp/tmp.xcconfig
        title: Workaround carthage lipo
    - script@1:
        inputs:
        - content: |-
            ./bootstrap.sh
        title: Run bootstrap
    - swiftlint-extended@1:
        inputs:
        - linting_path: "$BITRISE_SOURCE_DIR"
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            set -x

            rm /tmp/tmp.xcconfig
            envman add --key XCODE_XCCONFIG_FILE --value ''
        title: Remove carthage lipo workaround
    - script@1.1:
        title: NPM install and build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            npm install
            npm run build
    - xcode-build-for-simulator@0.11:
        inputs:
        - scheme: Fennec
        - xcodebuild_options: CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
  tests_1:
    envs:
      - opts:
          is_expand: false
        SHARD: '1'
    after_run:
        - build_and_test_1
  tests_2:
    envs:
      - opts:
          is_expand: false
        SHARD: '2'
    after_run:
        - build_and_test_1
  build_and_test_1:
    steps:
    - script@1.1:
        title: build_and_test_1_step
        inputs:
        - content: |-
            echo "here"
  deploy:
    steps:
      - git::https://github.com/bitrise-steplib/bitrise-step-artifact-pull.git@main:
          title: Pull artifacts
          inputs:
            - verbose: true
            - artifact_sources: stage_2.*
app:
  envs:
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: Client.xcodeproj
trigger_map:
- push_branch: main
  workflow: RunUnitTests
- pull_request_target_branch: main
  pipeline: pipeline_multiple_shards
- push_branch: irios/test-bitrise-shards
  pipelines: pipeline_multiple_shards
- pull_request_target_branch: irios/test-bitrise-shards
  pipelines: pipeline_multiple_shards
